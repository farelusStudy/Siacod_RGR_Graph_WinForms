<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnQn.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAADaAAAA2gEiFwR4AAADD0lE
        QVRYR63XOYgUQRTG8ZnpmQVZTMy8AhMVF/HGAzQQFVMjA81FFhE0M1dQDMQVWTUQAw0EMyPFC6/QwF1F
        AxUNPBHcNfH2/1X3a2p730z3zE7BjxmmXtXr6a6uo1ZWknpTEizDIVzDOL7jX2Yy+011ilGs2mS99FDU
        OOtkI0bxGr9hSdtRjGLVZgO6u5Ck1rDk83Acn+AlquIjTmAuaq1ayYU00sSyDvfwF17H3VAfd7AK9J1k
        2QolrQx24AW8zmbiGbYi5JlSotuuf/4cXgeeX6gyLowuQjlCzryEH+rN+bgLr2HsLc5gH3ZhN4ZhA9Vr
        E9Pj0PiKkycNPjXgvAax61gBxacdUPQ9+20pzuMHvPaGXCFn3ngTNGK9YKO7swBZ2ulFdRjEWXh9GOXS
        KxpGvq5Et88LND+hW21JZAkO4CCWN3jFmo28bjFewevLjNAmDL4hlAW/xEJYAt2Jx7D6J1gEq9fkcxVx
        H0XKOaRgTZ1lI/k2ZsES7MEfWL2+70X8KMoeg3IOK1DztxcQe4NzUKd6AzRJxfVfsQWWvImyOyCXFaxF
        xKusSovSESipXYAeq15XLz42rmCtZF5lFZq0NDgHYMln4yK8+KJJNfAqqniIlQlLDG+0JddAvQTNkF6b
        aXq9gA9YD0ss2/AIXS1gatjLI7gPTTiWfDPewYvtZEKNexmEN5N6a06j3hqEXs9ThfqqxnQBVV7Doi/Q
        GJAHeA8vrkx4DatMRB496wmULTzt5BNRlam46DMOYzV24ga8uE7SqbjiYlR0sllv1vnUH5C10EV5se2c
        tsVItPMtW45j+xHP+9pgaMHyYj35a2wd6C5U2ZCYC4hnv+34Bi/WcxTphiT6F9o6a9XzGhRp/tfipGlY
        +4ExeHGeWwjb9LxEm1INKm0cvYYejeRuZr6nCNvzgeIZQT9mtHWe6QrpUfKwZDOAs6yFokODArAG2gP2
        62CiR9v5YGJFx6c0sG9Hs2MIz3zKWaCshAbp3k6vywi6PZyqjdr27ZSsI7cOIFfQ7niuOsVodq2QuFb7
        D4UE2qgalHsoAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAADHAAAAxwFiM3khAAABGUlE
        QVRYR+3Wv0pCURzA8auUKDTYIAgiPYJBkY+QQ4sPIIKTS+DaVoP4BA1NERTi0hyBYA/gEL6BKC4KglNJ
        6vdHXDgcvINwzhHkfOEDbufg+XcDn893qCVx8v/TbXEU0cYjjuGsM7QwwRo9pGC9NOoYYAUZ3MkEEijh
        E78IBw69wcoSxHCOZ8yhDzzCPfIwXg4PGEIfeIEXXEA2o9HkSFXRxx/UgZfo4gZy/IyXxTt+oA4sprjF
        KayVQQfbJjBDA1YnIMkSVBC1BF8ow8oSqMkmvEPUJnzFJYxvQjU5hgU8YdsxHENuRCvHUE0uomt8wOlF
        pCdXcQ3fcHoV68lj1ITzx0hNNt8V5O+X5/gIe2lvHyQ+n2/HgmADW41a7Nsxps0AAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="tTpQn.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>